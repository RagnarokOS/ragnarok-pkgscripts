#!/usr/bin/env perl

# $Ragnarok$
# pkg_install: install or update non-base system packages.

use strict;
use warnings;
use FindBin;
use lib $FindBin::Bin;
use PkgScripts::Emerge qw(emcmd);
use PkgScripts::Config qw($emerge_opts $set_name);

my @pkgs	= @ARGV;

# Add pkg to @local set if it's not already there
sub add_to_set {
	my ($pkg)	= @_;
	my $set		= "/etc/portage/sets/$set_name";

	# Create the set file if it doesn't already exist
	if (! -f $set) {
		open(my $sf, '>', $set) or die("Can't open $set for reading: $!\n");
		close($sf);
	}

	open(my $fh, '<', $set) or die("Can't open $set file: $!\n");
	my $exists	= 0;
	while(my $line = <$fh>) {
		if ($line =~ /\Q$pkg\E/) {
			$exists = 1;
			last;
		}
	}
	close($fh) or die("Can't close $set file: $!\n");

	if ($exists) {
		print("$pkg is already in $set file, reinstalling...\n");
	} else {
		open($fh, '>>', $set) or die("Can't add $pkg to $set\n");
		print($fh "$pkg\n");
		close($fh) or die("Can't close $set file: $!\n");
	}
}

sub rm_pkg {
	my ($pkg)	= @_;
	my $set		= "/etc/portage/sets/$set_name";
	my $tmpfile	= "$set.tmp";

	open(my $in,  '<', $set)  or die("Can't open $set for reading: $!\n");
	open(my $out, '>', $tmpfile) or die("Can't open $tmpfile for writing: $!\n");

	while (my $line = <$in>) {
	next if ($line =~ /\Q$pkg\E/);
	print($out $line);
	}

	close($in);
	close($out);

	rename($tmpfile, $set) or die("Can't rename $tmpfile to $set: $!\n");

	# TODO: decide if we're running --depclean against the package here, or
	# let the user run sysclean instead.
}

sub install_pkg {
	my (@pkgs)	= @_;

	foreach my $pkg (@pkgs) {
		add_to_set($pkg);
	}
	emcmd("$emerge_opts", '--oneshot', "@pkgs") == 0
		or die("Can't install @pkgs: $!\n");
}
